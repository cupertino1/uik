&НаКлиенте
Процедура ИмяФайлаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ДиалогВыбора = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбора.Заголовок = "Выберите файл";
	
	Если ДиалогВыбора.Выбрать() Тогда
		Объект.ИмяФайла = ДиалогВыбора.ПолноеИмяФайла;
	КонецЕсли;
КонецПроцедуры
//--------------------------------------------------------------------------------------------------------------
&НаСервере
Процедура ПрочитатьФайлНаСервере()
	ТаблицаЗн = Новый ТаблицаЗначений;
	
	ЗагружаемыйФайл = Новый ТекстовыйДокумент;
	ЗагружаемыйФайл.Прочитать(Объект.ИмяФайла);
	
	//шапка по умолчанию 3 строка, из первой строки делаем колонки таблицы
	Шапка = ЗагружаемыйФайл.ПолучитьСтроку(3);
	
	//раскладываем строку в массив
	МассивКолонок = епс_БиблиотекаПолезныхПроцедурИФункций.РазложитьСтрокуВМассивПодстрок(Шапка, Объект.Разделитель);
	
	//генерируем колонки	
	Для Каждого ИмяКолонки Из МассивКолонок Цикл 		
		ИмяБезПробелов = СтрЗаменить(ИмяКолонки," ",""); // убираем из имени колонок пробелы
		
		//////BOARDID	SECID	TRADEDATE	SHORTNAME	NAME	CLOSE	OPEN	HIGH	LOW	VALUE	DURATION	YIELD	DECIMALS	CAPITALIZATION	CURRENCYID	DIVISOR

		Если ИмяБезПробелов = "TRADEDATE" Тогда
			ТипЗн = Новый ОписаниеТипов("Дата"); 		
		ИначеЕсли ИмяБезПробелов = "CLOSE" или ИмяБезПробелов = "YIELD" Тогда
			ТипЗн = Новый ОписаниеТипов("Число");
		ИначеЕсли ИмяБезПробелов = "SECID" Тогда
			ТипЗн = Новый ОписаниеТипов("СправочникСсылка.уи_Индексы");
		КонецЕсли;
		
		ТаблицаЗн.Колонки.Добавить(ИмяБезПробелов, ТипЗн, ИмяКолонки);
		
		//ТаблицаЗн.Колонки.Добавить(ИмяБезПробелов, , ИмяКолонки); 
	КонецЦикла;
	                    
	Для НомерСтроки=4 по ЗагружаемыйФайл.КоличествоСтрок() Цикл		
		// получить строку файла с указанным номером и преобразуем её в массив
		Строка = ЗагружаемыйФайл.ПолучитьСтроку(НомерСтроки);
		МассивКолонок = епс_БиблиотекаПолезныхПроцедурИФункций.РазложитьСтрокуВМассивПодстрок(Строка,Объект.Разделитель);
		НоваяСтрока = ТаблицаЗн.Добавить();  		

		Для НомерКолонки = 1 по МассивКолонок.Количество() Цикл 
			//заполняем строку значениями
			ТекущееЗначение = МассивКолонок[НомерКолонки-1];
			ИмяКолонки = ТаблицаЗн.Колонки[НомерКолонки-1].Имя; 		
			
			Если ИмяКолонки = "TRADEDATE" Тогда
				ТекущееЗначение = СтрЗаменить(ТекущееЗначение , "-", "");
				ТекущееЗначение = НачалоДня(Дата(ТекущееЗначение));
			ИначеЕсли ИмяКолонки = "SECID" Тогда
				ТекущееЗначение = Справочники.уи_Индексы.НайтиПоНаименованию(ТекущееЗначение);
			КонецЕсли;
			
			НоваяСтрока[ИмяКолонки] = ТекущееЗначение;
			
		КонецЦикла;   		
		
	КонецЦикла; 
	
	
	МассивПараметровОтбора = Новый Массив;
	Если НЕ епс_БиблиотекаПолезныхПроцедурИФункций.ЕслиДатаПустая(Объект.ДатаНачальная) Тогда
		МассивПараметровОтбора.Добавить(Новый Структура("Ключ, ВидСравнения, Значение", "TRADEDATE", ВидСравнения.БольшеИлиРавно, НачалоДня(Объект.ДатаНачальная)));
	КонецЕсли;
	Если НЕ епс_БиблиотекаПолезныхПроцедурИФункций.ЕслиДатаПустая(Объект.ДатаКонечная) Тогда
		МассивПараметровОтбора.Добавить(Новый Структура("Ключ, ВидСравнения, Значение", "TRADEDATE", ВидСравнения.МеньшеИлиРавно, КонецДня(Объект.ДатаКонечная)));
	КонецЕсли;
	епс_БиблиотекаПолезныхПроцедурИФункций.ОтборВТаблицеЗначений(ТаблицаЗн, МассивПараметровОтбора);
	

	// Записать ТаблицаЗн в регистр уи_ДополнительныеИндексы
	ЗаписатьИтоговуюТаблицуВРегистр(ТаблицаЗн);
КонецПроцедуры
//--------------------------------------------------------------------------------------------------------------
&НаСервере
Процедура ЗаписатьИтоговуюТаблицуВРегистр(ИтоговаяТаблица)
	НовыйНабор = РегистрыСведений.уи_ДополнительныеИндексы.СоздатьНаборЗаписей();

	Для каждого Запись Из ИтоговаяТаблица Цикл 
		Если Запись.SECID = Справочники.уи_Индексы.ПустаяСсылка() Тогда
			Продолжить;
		КонецЕсли;
		
		НовыйНабор.Отбор.Индекс.Использование = Истина;
		НовыйНабор.Отбор.Индекс.ВидСравнения = ВидСравнения.Равно;
		НовыйНабор.Отбор.Индекс.Значение = Запись.SECID;
		НовыйНабор.Отбор.Период.Использование = Истина;
		НовыйНабор.Отбор.Период.ВидСравнения = ВидСравнения.Равно;
		НовыйНабор.Отбор.Период.Значение = Запись.TRADEDATE;		
		
		НовыйНабор.Очистить();
		 
		НоваяЗапись = НовыйНабор.Добавить();
		
		НоваяЗапись.Значение = Запись.CLOSE;
		НоваяЗапись.Доходность = Запись.YIELD;
		
		//НоваяЗапись.МинРейтинг = Запись.????;
		//НоваяЗапись.МаксРейтинг = Запись.????;
		НоваяЗапись.Индекс = Запись.SECID;
		
		НоваяЗапись.Период = Запись.TRADEDATE;
		
		НовыйНабор.Записать();
	КонецЦикла;
КонецПроцедуры
//--------------------------------------------------------------------------------------------------------------
&НаКлиенте
Процедура ПрочитатьФайл(Команда)
	ПрочитатьФайлНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПриОткрытииНаСервере()
	 Объект.ИмяФайла = ХранилищеСистемныхНастроек.Загрузить("ПутьКФайлуПараметровИндексовДоходности");
	 Объект.Разделитель = ХранилищеСистемныхНастроек.Загрузить("РазделительВФайлеПараметровИндексовДоходности");
	 Объект.ДатаКонечная = ХранилищеСистемныхНастроек.Загрузить("ДатаКонечнаяПараметровИндексовДоходности");
	 Объект.ДатаНачальная = ХранилищеСистемныхНастроек.Загрузить("ДатаНачальнаяПараметровИндексовДоходности");
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПриОткрытииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПриЗакрытииНаСервере()
	ХранилищеСистемныхНастроек.Сохранить("ПутьКФайлуПараметровИндексовДоходности",, Объект.ИмяФайла);
	ХранилищеСистемныхНастроек.Сохранить("РазделительВФайлеПараметровИндексовДоходности",, Объект.Разделитель);
	ХранилищеСистемныхНастроек.Сохранить("ДатаКонечнаяПараметровИндексовДоходности",, Объект.ДатаКонечная);
	ХранилищеСистемныхНастроек.Сохранить("ДатаНачальнаяПараметровИндексовДоходности",, Объект.ДатаНачальная);
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	ПриЗакрытииНаСервере();
КонецПроцедуры
