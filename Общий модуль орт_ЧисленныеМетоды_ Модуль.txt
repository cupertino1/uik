//--------------------------------------------------------------------------------------------------------------
Функция МодульЧисла(Число) Экспорт
	Возврат Макс(Число, -Число); 
КонецФункции
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
// Метод золотого сечения
//--------------------------------------------------------------------------------------------------------------
Функция НайтиКореньМетодомЗолотогоСечения(ПараметрыДляРасчета, ТочностьВычислений) Экспорт
	ЗначениеЦелевойФункции = 0;
	ЗолотойКоэффициент = 2 - (sqrt(5) + 1) / 2;   // ~0,382
    Результат = ПараметрыДляРасчета.Предположение;
		
	Выполнить("ЗначениеЦелевойФункции = " + ПараметрыДляРасчета.ИмяЦелевойФункции + "(ПараметрыДляРасчета);");
	Шаг = ?(ЗначениеЦелевойФункции > 0, 1, -1) * (ЗолотойКоэффициент*Результат);
    Пока МодульЧисла(Шаг) > ТочностьВычислений Цикл
		Результат = Результат + Шаг;
        ПараметрыДляРасчета.Предположение = Результат;
		Выполнить("ЗначениеЦелевойФункции = " + ПараметрыДляРасчета.ИмяЦелевойФункции + "(ПараметрыДляРасчета);");
        Шаг = ?(ЗначениеЦелевойФункции*Шаг < 0, -Шаг*ЗолотойКоэффициент, Шаг);
    КонецЦикла; 
            
	Возврат Результат;
КонецФункции
//--------------------------------------------------------------------------------------------------------------
// Метод касательных (Ньютона)
//--------------------------------------------------------------------------------------------------------------
Функция НайтиКореньМетодомКасательных(ПараметрыДляРасчета, ТочностьВычислений) Экспорт
    ТаймАут = 15;
    МаксИтераций = 10;
    
    ЗначениеIRR = 0;
    РасчетОтклоненияIRR = 0;
    ТекущаяИтерация = 0;  	
	ПродолжатьРасчет = Истина;  
    
    //////Начало = ТекущаяУниверсальнаяДатаВМиллисекундах();
    
    Пока ПродолжатьРасчет Цикл              // И ТекущаяИтерация < МаксИтераций Цикл 
        Выполнить("ЗначениеIRR = " + ПараметрыДляРасчета.ИмяЦелевойФункции + "(ПараметрыДляРасчета);"); 
		Выполнить("РасчетОтклоненияIRR = " + ПараметрыДляРасчета.ИмяОтклоненияЦелевойФункции + "(ПараметрыДляРасчета);");
        
        НовоеПредположение = ПараметрыДляРасчета.Предположение - ЗначениеIRR / РасчетОтклоненияIRR;
		ТекущийУровеньТочности = МодульЧисла(НовоеПредположение - ПараметрыДляРасчета.Предположение);
		ПараметрыДляРасчета.Предположение = НовоеПредположение;
		
        //Если ПараметрыДляРасчета.Предположение > 2 Тогда
        //	Сообщить("Возможное расхождение алгоритма!" + Символы.ПС + 
        //			 "Текущее значение ставки " + Окр(ПараметрыДляРасчета.Предположение, 4) + "." + Символы.ПС + 
        //			 "Сбрасываю на 0.1 и продолжаю расчет...");
        //	ПараметрыДляРасчета.Предположение = 0.1;
        //КонецЕсли;	
        
        ТекущаяИтерация = ТекущаяИтерация + 1; 
        
        //////Конец = ТекущаяУниверсальнаяДатаВМиллисекундах(); 
        //////ВремяВыполнения = (Конец - Начало)/1000; 
        //////Если ВремяВыполнения >= ТаймАут Тогда
        //////    Сообщить("Прервано по таймауту " + ТаймАут + "сек !!!");
        //////    //Прервать;
        //////КонецЕсли;
        //////
		ПродолжатьРасчет = ?(ТекущийУровеньТочности > ТочностьВычислений И 
                             МодульЧисла(ЗначениеIRR) > ТочностьВычислений И 
                             ТекущаяИтерация < МаксИтераций //И
                             //ВремяВыполнения < ТаймАут
                             , Истина, Ложь);
    КонецЦикла;
                         
	Возврат ПараметрыДляРасчета.Предположение;
КонецФункции
//--------------------------------------------------------------------------------------------------------------
